$date
	Sat Nov  7 05:53:15 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Ejercicio_1_tb $end
$var wire 8 ! Program_Byte [7:0] $end
$var wire 4 " Oprnd [3:0] $end
$var wire 4 # Instr [3:0] $end
$var reg 12 $ RAM [11:0] $end
$var reg 1 % clk_Fetch $end
$var reg 1 & clk_PC $end
$var reg 1 ' enable_Fetch $end
$var reg 1 ( enable_PC $end
$var reg 1 ) load_PC $end
$var reg 1 * reset_Fetch $end
$var reg 1 + reset_PC $end
$scope module c1 $end
$var wire 1 % clk_Fetch $end
$var wire 1 & clk_PC $end
$var wire 12 , direccion [11:0] $end
$var wire 1 ' enable_Fetch $end
$var wire 1 ( enable_PC $end
$var wire 1 ) load_PC $end
$var wire 1 * reset_Fetch $end
$var wire 1 + reset_PC $end
$var wire 8 - Program_Byte [7:0] $end
$var wire 12 . PC [11:0] $end
$var wire 4 / Oprnd [3:0] $end
$var wire 4 0 Instr [3:0] $end
$scope module P1 $end
$var wire 12 1 D [11:0] $end
$var wire 1 & clk $end
$var wire 1 ( enable $end
$var wire 1 ) load $end
$var wire 1 + reset $end
$var reg 12 2 Q [11:0] $end
$upscope $end
$scope module P2 $end
$var wire 8 3 OUT [7:0] $end
$var wire 12 4 direccion [11:0] $end
$upscope $end
$scope module p3 $end
$var wire 8 5 D [7:0] $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var wire 4 6 fetch [3:0] $end
$var wire 4 7 comando [3:0] $end
$scope module F1 $end
$var wire 1 8 D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 9 Q $end
$upscope $end
$scope module F2 $end
$var wire 1 : D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 ; Q $end
$upscope $end
$scope module F3 $end
$var wire 1 < D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 = Q $end
$upscope $end
$scope module F4 $end
$var wire 1 > D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 ? Q $end
$upscope $end
$scope module F5 $end
$var wire 1 @ D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 A Q $end
$upscope $end
$scope module F6 $end
$var wire 1 B D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 C Q $end
$upscope $end
$scope module F7 $end
$var wire 1 D D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 E Q $end
$upscope $end
$scope module F8 $end
$var wire 1 F D $end
$var wire 1 % clk $end
$var wire 1 ' enable $end
$var wire 1 * reset $end
$var reg 1 G Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G
1F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
b0 7
b0 6
b1 5
b0 4
b1 3
b0 2
b11 1
b0 0
b0 /
b0 .
b1 -
b11 ,
1+
1*
0)
0(
0'
0&
0%
b11 $
b0 #
b0 "
b1 !
$end
#10
1D
b11 !
b11 -
b11 3
b11 5
b1 .
b1 2
b1 4
1(
0+
1%
1&
#20
0%
0&
#30
1@
1B
b1111 !
b1111 -
b1111 3
b1111 5
b10 .
b10 2
b10 4
1%
1&
#40
0%
0&
#50
1>
b11111 !
b11111 -
b11111 3
b11111 5
b11 .
b11 2
b11 4
1%
1&
#60
0>
0B
0F
b1010 !
b1010 -
b1010 3
b1010 5
b100 .
b100 2
b100 4
0+
0%
0&
#70
1>
1B
1F
b11111 !
b11111 -
b11111 3
b11111 5
b11 .
b11 2
b11 4
1)
1%
1&
#80
0)
0%
0&
#90
0>
0B
0F
b1010 !
b1010 -
b1010 3
b1010 5
b100 .
b100 2
b100 4
1%
1&
#100
0%
0&
#110
1<
1>
1B
1F
b111111 !
b111111 -
b111111 3
b111111 5
b101 .
b101 2
b101 4
1%
1&
#120
0%
0&
#130
1:
0<
0@
0D
b1010101 !
b1010101 -
b1010101 3
b1010101 5
b110 .
b110 2
b110 4
0*
1%
1&
#140
1;
b101 #
b101 0
b101 7
1?
1C
b101 "
b101 /
b101 6
1G
1'
0%
0&
#150
0:
0>
1@
0B
1D
0F
b1010 !
b1010 -
b1010 3
b1010 5
b111 .
b111 2
b111 4
1%
1&
#160
0%
0&
#170
0@
0;
b0 #
b0 0
b0 7
0?
1A
0C
1E
b1010 "
b1010 /
b1010 6
0G
b10 !
b10 -
b10 3
b10 5
b1000 .
b1000 2
b1000 4
1%
1&
#180
0%
0&
#190
1B
0D
1F
b10 "
b10 /
b10 6
0A
b101 !
b101 -
b101 3
b101 5
b1001 .
b1001 2
b1001 4
1%
1&
#200
0B
b1 !
b1 -
b1 3
b1 5
b0 .
b0 2
b0 4
1+
0%
0&
#210
b0 "
b0 /
b0 6
0E
1*
1%
1&
